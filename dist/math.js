(()=>{"use strict";var e,t=function(e,t,r,s){if("a"===r&&!s)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!s:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===r?s:"a"===r?s.call(e):s?s.value:t.get(e)};class r{constructor(){e.set(this,new Map)}addEventListener(r,s){t(this,e,"f").has(r)||t(this,e,"f").set(r,new Set),t(this,e,"f").get(r)?.add(s)}removeEventListener(r,s){t(this,e,"f").get(r)?.delete(s)}notifyListeners(r,...s){t(this,e,"f").get(r)?.forEach((e=>e(...s)))}}e=new WeakMap;const s=new class extends r{constructor(){super(),this.out={},self.onmessage=async e=>{if("string"==typeof e?.data?.__type)switch(e.data.__type){case"state_push":this.onPushState?.(e.data.state);break;case"event":this.notifyListeners?.(e.data.event,e.data.args);break;case"operation":const{args:t,operation:r,__port:s}=e.data;if(!s)return this.err("Operation Channel Error","Port not found");const a=await(this.out?.[r]);if("function"!=typeof a)return this.err("Operation not found",null);s.onmessageerror=e=>{this.err("Operation Channel Error",e)};try{const e=await a(...t||[]);s.postMessage({__type:"operation:result",payload:e})}catch(e){return this.err("Operation Execution Error",e)}}},self.onmessageerror=e=>{this.err("Message Error",e)},self.onerror=e=>{this.err("Uncaught Error",e)}}err(e,t){const r=t instanceof Event?(t.message||t.data||"").toString():t instanceof Error?t.message:"",s=new Error(`${e}${r?": "+r:""}`);return this?.onError?.(s),s}postMessage(e,t,r){postMessage({__type:e,...t},"*",r)}async execute(e,...t){return await async function(e,t,r,s,a=5e3){return new Promise(((n,o)=>{const i=new MessageChannel,c=i.port1,u=i.port2;let p=!1;setTimeout((()=>{p||o(new Error("Operation timeout"))}),a||5e3),c.onmessage=async e=>{const r=function(e,t){return e.data&&"object"==typeof e.data&&e.data.__type===t?e.data:null}(e,t+":result");r&&(p=!0,n(r.payload))},u.onmessageerror=e=>{o(new Error("Channel Error (in)"))},c.onmessageerror=e=>{o(new Error("Channel Error (out)"))},e instanceof Worker?e.postMessage({...r,__type:t,__port:u},{transfer:[u,...s]}):e.postMessage({...r,__type:t,__port:u},"*",[u,...s])}))}(self,"operation",{args:t,operation:e},[],this.operationTimeout)}async emitEvent(e,t){this.postMessage("event",{event:e,args:t})}async pushState(e,t=!0){this.postMessage("state_push",{state:e,populate:t})}};function a(e,t){return Number.isInteger(e)||(e=0),Number.isInteger(t)||(t=0),e+t}let n="circle";s.out={add:a,substract:function(e,t){return Number.isInteger(e)||(e=0),Number.isInteger(t)||(t=0),e-t},logArea:function(e=1){let t;switch(Number.isInteger(e)||(e=1),n){case"circle":t=Math.PI*e*e;break;case"square":t=e*e;break;case"rectangle":t=e*e/2;default:t="unknown area"}console.log("Area of",n,"with width",e,":",t)},add:a},s.addEventListener("shape_change",(e=>{n=e,console.log("Shape changed to",e)}))})();